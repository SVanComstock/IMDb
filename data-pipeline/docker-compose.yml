version: '3'

volumes:
  data:
  elasticsearch:
services:
  volumes-provisioner:
    image: hasnat/volumes-provisioner
    environment:
      PROVISION_DIRECTORIES: "0:0:0777:/data;0:0:0777:/elasticsearch"
    volumes:
      - data:/data
      - elasticsearch:/elasticsearch
    network_mode: none

  nifi:
    hostname: nifi
    container_name: nifi_data_eng
    build: ./nifi
    ports:
      - "8080:8080"
      - "8443:8443"
      - "10000:10000"
    depends_on:
      - zookeeper

  zookeeper:
    hostname: zookeeper
    container_name: zookeeper_data_eng
    image: 'debezium/zookeeper:1.0'
    ports:
      - '2181:2181'
      - '2888:2888'
      - '3888:3888'

  redis:
    hostname: redis
    container_name: redis_data_eng
    image: redis:5.0.6


  postgres:
    hostname: postgres
    container_name: postgres_data_eng
    image: legalshield/healthcheck-postgres:10.11-alpine
    volumes:
      - data:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=adonis_development
    depends_on:
      - volumes-provisioner

  elasticsearch:
    hostname: elasticsearch
    container_name: elasticsearch_data_eng
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9300:9300"
      - "9200:9200"
    environment:
      - node.name=es01
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
    depends_on:
      - eshq
      - volumes-provisioner

  eshq:
    hostname: eshq
    container_name: eshq_data_eng
    image: elastichq/elasticsearch-hq
    ports:
      - "9201:5000"

  # kafka:
  #   hostname: kafka
  #   image: 'debezium/kafka:1.0'
  #   ports:
  #     - '9092:9092'
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     - ZOOKEEPER_CONNECT=zookeeper:2181

  # connect:
  #   hostname: connect
  #   image: 'debezium/connect:1.0'
  #   ports:
  #     - '8083:8083'
  #   depends_on:
  #     - kafka
  #   environment:
  #      - GROUP_ID=1
  #      - CONFIG_STORAGE_TOPIC=my_connect_configs
  #      - OFFSET_STORAGE_TOPIC=my_connect_offsets
  #      - STATUS_STORAGE_TOPIC=my_connect_statuses
  #      - BOOTSTRAP_SERVERS=kafka:9092
